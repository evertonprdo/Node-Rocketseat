generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  phone    String
  cpf      String @unique
  password String

  admin          Admin?
  deliveryWorker DeliveryWorker?

  @@map("users")
}

model Admin {
  id    String @id @default(uuid())
  email String @unique

  userId String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("admins")
}

model DeliveryWorker {
  id            String @id @default(uuid())
  operationCity String

  userId String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  deliveries Delivery[]

  @@map("delivery_workers")
}

model Customer {
  id           String @id @default(uuid())
  name         String
  email        String @unique
  cep          String
  state        String
  city         String
  street       String
  number       String
  neighborhood String

  deliveries Delivery[]

  @@map("customers")
}

enum Status {
  PENDING
  PICKED_UP
  DELIVERED
  RETURNED
}

model Delivery {
  id     String @id @default(uuid())
  status Status

  createdAt   DateTime  @default(now()) @map("created_at")
  pickedUpAt  DateTime? @map("picked_up_at")
  deliveredAt DateTime? @map("delivered_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  customerId       String  @map("customer_id")
  deliveryWorkerId String? @map("delivery_worker_id")
  attachmentId     String  @map("attachment_id")

  customer       Customer        @relation(fields: [customerId], references: [id])
  deliveryWorker DeliveryWorker? @relation(fields: [deliveryWorkerId], references: [userId])
  attachment     Attachment?     @relation(fields: [attachmentId], references: [id])
}

model Attachment {
  id    String @id @default(uuid())
  title String
  url   String

  deliveries Delivery[]

  @@map("attachments")
}
